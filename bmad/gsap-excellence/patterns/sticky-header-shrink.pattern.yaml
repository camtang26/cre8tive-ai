# Pattern: Sticky Header with Shrink
# Category: Scroll Effects
# GSAP Excellence Engine Pattern Library

id: pattern-sticky-header-shrink-003
name: "Sticky Header with Shrink Effect"
category: "scroll-effects"
complexity: "medium"
gsap_version: "3.12.0"
plugins_required: ["ScrollTrigger"]
description: "Header shrinks and changes style as user scrolls down - premium navigation pattern"
inspiration_source: "Apple, Stripe, modern product sites"
performance_notes: "60fps with careful CSS class toggling and transform animations"
created_date: "2025-10-11"
last_validated: "2025-10-11"
success_count: 0
tags: ["scroll", "header", "navigation", "sticky", "shrink", "premium"]
framework: "vanilla"

code_example: |
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  const header = document.querySelector('[data-header]');
  const logo = header.querySelector('[data-logo]');

  // Shrink header on scroll
  ScrollTrigger.create({
    start: 'top top',
    end: 99999, // Large number = entire page
    onUpdate: (self) => {
      const scrollProgress = Math.min(self.progress * 5, 1); // Cap at 1

      // Shrink header height
      gsap.to(header, {
        paddingTop: gsap.utils.interpolate(32, 16, scrollProgress),
        paddingBottom: gsap.utils.interpolate(32, 16, scrollProgress),
        duration: 0.3,
        ease: "power2.out"
      });

      // Shrink logo
      gsap.to(logo, {
        scale: gsap.utils.interpolate(1, 0.8, scrollProgress),
        duration: 0.3,
        ease: "power2.out"
      });

      // Add/remove class for styling
      if (self.direction === 1 && scrollProgress > 0.1) {
        header.classList.add('scrolled');
      } else if (self.direction === -1 && scrollProgress < 0.05) {
        header.classList.remove('scrolled');
      }
    }
  });

usage_notes: |
  HTML Structure:
  <header data-header>
    <img data-logo src="logo.svg" />
    <nav>...</nav>
  </header>

  CSS:
  header { position: sticky; top: 0; transition: background-color 0.3s; }
  header.scrolled { background-color: rgba(255,255,255,0.95); backdrop-filter: blur(10px); }

  The class 'scrolled' allows CSS to handle color/shadow changes

variations:
  hide_on_scroll_down: "Use ScrollTrigger to hide header when scrolling down"
  show_on_scroll_up: "Show header only when scrolling up"
  color_change: "Interpolate background color instead of class toggle"

performance_tips:
  - Use sticky positioning (not fixed with JS)
  - Throttle updates with ScrollTrigger's onUpdate
  - Use CSS transitions for color/shadow changes
  - Keep transform animations for size/scale changes
  - Consider using CSS custom properties for interpolated values

accessibility:
  reduced_motion: "Skip shrink animation, use instant class toggle"
  implementation: |
    if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
      ScrollTrigger.create({
        start: 'top top',
        end: 99999,
        onEnter: () => header.classList.add('scrolled'),
        onLeaveBack: () => header.classList.remove('scrolled')
      });
      return;
    }

browser_support:
  chrome: "Full support"
  firefox: "Full support"
  safari: "Full support (backdrop-filter may need -webkit- prefix)"
  mobile: "Good support, test backdrop-filter performance"
