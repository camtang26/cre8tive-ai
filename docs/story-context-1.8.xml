<story-context id="bmad/bmm/workflows/4-implementation/story-context/template" v="1.0">
  <metadata>
    <epicId>1</epicId>
    <storyId>1.8</storyId>
    <title>Create WorkflowTransformation Speed Comparison Section</title>
    <status>Draft</status>
    <generatedAt>2025-10-08</generatedAt>
    <generator>BMAD Story Context Workflow</generator>
    <sourceStoryPath>/home/cameronai/projects/cre8tive-website-1006/docs/stories/story-1.8.md</sourceStoryPath>
  </metadata>

  <story>
    <asA>a decision maker</asA>
    <iWant>to see the speed advantage of AI Briefing Engine vs traditional process</iWant>
    <soThat>I understand the time-saving value proposition</soThat>
    <tasks>
- Create WorkflowTransformation component with split comparison (AC: #1)
  - Traditional process timeline (2-4 weeks, multiple stages)
  - AI Briefing Engine timeline (2-5 minutes, single stage)
- Create horizontal progress bar timelines with markers (AC: #2)
- Create TransformationValueCard component (AC: #3)
  - Speed to Market (indigo, Zap icon)
  - Brand Consistency (cyan, Shield icon)
  - Creative Freedom (fuchsia, Palette icon)
  - Seamless Handoff (orange, Handshake icon)
- Implement 2×2 grid layout (desktop) / 1 column (mobile) (AC: #4)
- Add GSAP reveal animations (timeline draw, cards stagger) (AC: #5)
- Import Lucide React icons (AC: #6)
- Implement React cleanup with gsap.context() (AC: #7)
- Test Integration Verification IV1 (Mobile overflow check)
- Test Integration Verification IV2 (Grid spacing consistency)
- Test Integration Verification IV3 (Messaging alignment)
</tasks>
  </story>

  <acceptanceCriteria>
1. WorkflowTransformation component created with split comparison:
   - **Traditional Process**: 2-4 weeks (lengthy timeline visual with multiple stages)
   - **AI Briefing Engine**: 2-5 minutes (fast timeline with single stage)
2. Visual timeline: Horizontal progress bars with time markers
3. TransformationValueCard component displays 4 value props:
   - **Speed to Market** (indigo, lightning icon): "Minutes not weeks"
   - **Brand Consistency** (cyan, shield icon): "Every ad aligns with brand"
   - **Creative Freedom** (fuchsia, palette icon): "8 styles to match any vision"
   - **Seamless Handoff** (orange, handshake icon): "Studios production ready"
4. Layout: Timeline comparison top, 4 value cards grid below (2×2 desktop, 1 column mobile)
5. GSAP reveal: Timeline draws in left-to-right, value cards stagger fade-in
6. Icons: Lucide React (Zap, Shield, Palette, Handshake)
7. React cleanup implemented: `gsap.context()` with cleanup function to prevent memory leaks (ScrollTriggers killed on unmount)
</acceptanceCriteria>

  <artifacts>
    <docs>
      <doc>
        <path>docs/architecture/animation-patterns.md</path>
        <title>Animation Patterns &amp; Best Practices</title>
        <section>Pattern 1: Basic Scroll-Triggered Animation (lines 95-146)</section>
        <snippet>
          useEffect(() => {
            const ctx = gsap.context(() => {
              gsap.from('.timeline-bar', {
                scaleX: 0,
                transformOrigin: "left center",
                duration: 1.2,
                ease: "power2.out",
                scrollTrigger: {
                  trigger: ".workflow-transformation",
                  start: "top 80%",
                  toggleActions: "play none none reverse"
                }
              })
            }, containerRef)
            return () => ctx.revert()  // CRITICAL: Cleanup
          }, [])
        </snippet>
        <reason>Story 1.8 AC5 requires GSAP reveal animations for timeline draw (left-to-right) and value card stagger. Pattern 1 shows proper ScrollTrigger setup with cleanup.</reason>
      </doc>
      <doc>
        <path>docs/architecture/animation-patterns.md</path>
        <title>Animation Patterns &amp; Best Practices</title>
        <section>Pattern 4: Stagger Animation (lines 274-309)</section>
        <snippet>
          gsap.from('.value-card', {
            opacity: 0,
            y: 30,
            stagger: 0.15,
            duration: 0.6,
            ease: "power2.out",
            scrollTrigger: {
              trigger: ".value-cards-grid",
              start: "top 80%"
            }
          })
        </snippet>
        <reason>Story 1.8 AC5 requires value cards stagger fade-in. Pattern 4 shows proper stagger configuration with 0.15s delay.</reason>
      </doc>
      <doc>
        <path>docs/architecture/design-system.md</path>
        <title>Design System - Color Palette</title>
        <section>Briefing Engine Colors (lines 49-98)</section>
        <snippet>
          indigo: { DEFAULT: "#4F46E5" },  // Speed to Market
          cyan: { DEFAULT: "#0891B2" },    // Brand Consistency
          fuchsia: { DEFAULT: "#C026D3" }, // Creative Freedom
          orange: { DEFAULT: "#EA580C" }   // Seamless Handoff
        </snippet>
        <reason>Story 1.8 AC3 specifies exact colors for each value prop card. Design system provides authoritative color values.</reason>
      </doc>
      <doc>
        <path>docs/architecture/frontend-architecture.md</path>
        <title>Frontend Architecture - Component Template</title>
        <section>Component Design Patterns (lines 60-141)</section>
        <snippet>
          export interface ComponentProps {
            title: string
            description?: string
            className?: string
          }

          export function Component({ title, description, className }: ComponentProps) {
            const cardRef = useRef&lt;HTMLDivElement&gt;(null)
            return (
              &lt;article ref={cardRef} className={cn('base-classes', className)}&gt;
                {/* Component content */}
              &lt;/article&gt;
            )
          }
        </snippet>
        <reason>Story 1.8 requires creating TransformationValueCard component. Frontend architecture provides standard component template pattern.</reason>
      </doc>
      <doc>
        <path>docs/prd/prd.md</path>
        <title>Product Requirements - User Journey</title>
        <section>Sofia's Journey (lines 177-187)</section>
        <snippet>
          WorkflowTransformation section (KEY CONVERSION MOMENT):
          - Traditional Process timeline: 2-4 weeks (multiple stages)
          - AI Briefing Engine timeline: 2-5 minutes (single stage)
          - Speed advantage visualization: Lightning icon + "Minutes not weeks"
          - 4 value cards: Speed to Market (indigo), Brand Consistency (cyan), Creative Freedom (fuchsia), Seamless Handoff (orange)
        </snippet>
        <reason>Story 1.8 implements the critical speed comparison section that converts users. PRD confirms exact messaging and visual hierarchy.</reason>
      </doc>
    </docs>
    <code>
      <artifact>
        <path>src/components/briefing/WorkflowTransformation.tsx</path>
        <kind>component</kind>
        <symbol>WorkflowTransformation</symbol>
        <lines>1-41</lines>
        <reason>This is the placeholder component that Story 1.8 will implement. Contains section structure, heading hierarchy, and TODO comments referencing Story 1.8 requirements.</reason>
      </artifact>
      <artifact>
        <path>src/components/briefing/ProcessStepCard.tsx</path>
        <kind>component</kind>
        <symbol>ProcessStepCard</symbol>
        <lines>1-114</lines>
        <reason>Similar card component pattern for Story 1.8's TransformationValueCard. Shows accent color mapping, glassmorphism styling, hover effects, and Lucide icon integration.</reason>
      </artifact>
      <artifact>
        <path>src/components/briefing/BenefitCard.tsx</path>
        <kind>component</kind>
        <symbol>BenefitCard</symbol>
        <lines>1-49</lines>
        <reason>Another card component with similar glassmorphism pattern, gradient accent backgrounds, and hover transitions. Useful reference for TransformationValueCard styling.</reason>
      </artifact>
      <artifact>
        <path>src/components/briefing/palette.ts</path>
        <kind>constant</kind>
        <symbol>briefingPalette</symbol>
        <lines>1-50</lines>
        <reason>Color palette constants for Briefing Engine. Story 1.8 value cards must use these exact colors (indigo, cyan, fuchsia, orange).</reason>
      </artifact>
      <artifact>
        <path>src/components/briefing/VisualStylesGallery.tsx</path>
        <kind>component</kind>
        <symbol>VisualStylesGallery</symbol>
        <lines>1-100</lines>
        <reason>Example of GSAP stagger reveal animation with ScrollTrigger cleanup. Pattern to follow for Story 1.8 value cards stagger animation (AC5).</reason>
      </artifact>
    </code>
    <dependencies>
      <node>
        <package>gsap</package>
        <version>^3.13.0</version>
        <usage>Timeline draw animation (AC5), value card stagger reveals</usage>
      </node>
      <node>
        <package>@gsap/react</package>
        <version>^2.1.2</version>
        <usage>Optional: useGSAP hook for cleaner React integration</usage>
      </node>
      <node>
        <package>lenis</package>
        <version>^1.3.11</version>
        <usage>Smooth scroll foundation (already integrated at app level)</usage>
      </node>
      <node>
        <package>lucide-react</package>
        <version>^0.462.0</version>
        <usage>Icons for value cards (AC6): Zap, Shield, Palette, Handshake</usage>
      </node>
      <node>
        <package>framer-motion</package>
        <version>^12.4.2</version>
        <usage>Optional: Card hover micro-interactions (can also use GSAP)</usage>
      </node>
      <node>
        <package>react</package>
        <version>^18.3.1</version>
        <usage>useEffect, useRef hooks for GSAP integration</usage>
      </node>
      <node>
        <package>tailwindcss</package>
        <version>^3.4.11</version>
        <usage>Utility classes for responsive layout, glassmorphism styling</usage>
      </node>
    </dependencies>
  </artifacts>

  <constraints>
    <constraint>
      <type>animation-pattern</type>
      <rule>MUST use GSAP ScrollTrigger Pattern 1 (Basic Scroll-Triggered Animation) for timeline draw and Pattern 4 (Stagger) for value cards</rule>
      <source>docs/architecture/animation-patterns.md lines 95-146, 274-309</source>
    </constraint>
    <constraint>
      <type>react-cleanup</type>
      <rule>MUST implement gsap.context() with cleanup function (return () => ctx.revert()) to prevent memory leaks (AC7)</rule>
      <source>docs/architecture/animation-patterns.md lines 432-461</source>
    </constraint>
    <constraint>
      <type>gpu-optimization</type>
      <rule>Timeline animation MUST use scaleX (GPU-accelerated) NOT width (CPU). Value cards MUST use transform: translateY() NOT top/margin</rule>
      <source>Story 1.8 Dev Notes lines 92-94</source>
    </constraint>
    <constraint>
      <type>color-palette</type>
      <rule>Value cards MUST use exact colors: Speed to Market (indigo #4F46E5), Brand Consistency (cyan #0891B2), Creative Freedom (fuchsia #C026D3), Seamless Handoff (orange #EA580C)</rule>
      <source>Story 1.8 AC3, docs/architecture/design-system.md lines 60-98</source>
    </constraint>
    <constraint>
      <type>responsive-layout</type>
      <rule>Desktop (1024px+): 2×2 grid for value cards. Mobile (&lt;1024px): 1 column stack (AC4)</rule>
      <source>Story 1.8 AC4</source>
    </constraint>
    <constraint>
      <type>component-structure</type>
      <rule>Create two components: WorkflowTransformation (container with timeline) and TransformationValueCard (reusable card component)</rule>
      <source>Story 1.8 AC1, AC3</source>
    </constraint>
    <constraint>
      <type>integration-verification</type>
      <rule>IV1: Timeline visuals MUST NOT overflow on 375px width. IV2: Value card grid spacing MUST match existing benefit cards. IV3: Speed comparison messaging MUST align with SPEC.md value props</rule>
      <source>Story 1.8 Dev Notes lines 96-99</source>
    </constraint>
  </constraints>

  <interfaces>
    <interface>
      <name>TransformationValueCard</name>
      <kind>component</kind>
      <signature>
        interface TransformationValueCardProps {
          title: string;           // "Speed to Market"
          description: string;     // "Minutes not weeks"
          icon: LucideIcon;        // Zap, Shield, Palette, Handshake
          accentColor: "indigo" | "cyan" | "fuchsia" | "orange";
          className?: string;
        }
        export function TransformationValueCard(props: TransformationValueCardProps): JSX.Element
      </signature>
      <path>src/components/briefing/TransformationValueCard.tsx (CREATE NEW)</path>
      <reason>Reusable component for 4 value prop cards (AC3). Similar pattern to ProcessStepCard and BenefitCard.</reason>
    </interface>
    <interface>
      <name>WorkflowTransformation</name>
      <kind>component</kind>
      <signature>
        export function WorkflowTransformation(): JSX.Element
      </signature>
      <path>src/components/briefing/WorkflowTransformation.tsx (MODIFY EXISTING)</path>
      <reason>Container component that orchestrates timeline comparison and value cards grid. Existing placeholder to be implemented.</reason>
    </interface>
    <interface>
      <name>briefingPalette</name>
      <kind>constant</kind>
      <signature>
        export const briefingPalette = {
          colors: {
            indigo: string,
            cyan: string,
            fuchsia: string,
            orange: string
          }
        }
      </signature>
      <path>src/components/briefing/palette.ts (EXISTING)</path>
      <reason>Single source of truth for Briefing Engine colors. Import and use for value card accent colors.</reason>
    </interface>
    <interface>
      <name>Lucide React Icons</name>
      <kind>library</kind>
      <signature>
        import { Zap, Shield, Palette, Handshake } from "lucide-react"
        // Usage: &lt;Zap className="w-8 h-8" style={{ color: accentHex }} /&gt;
      </signature>
      <path>lucide-react (EXISTING DEPENDENCY)</path>
      <reason>AC6 specifies exact icons for each value card. Already used in ProcessStepCard component.</reason>
    </interface>
  </interfaces>

  <tests>
    <standards>
      Manual browser testing only (zero automated tests in current project). Test in Chrome, Firefox, Safari, and mobile viewports (375px, 768px, 1024px, 1920px). Verify GSAP animations play correctly, no console errors, responsive layout adapts properly, and glassmorphism styling renders with backdrop-filter support.
    </standards>
    <locations>
      No test files exist. All testing is manual browser validation.
    </locations>
    <ideas>
      <test ac="AC1">
        <id>timeline-comparison-visual</id>
        <description>Verify Traditional Process timeline shows 2-4 weeks with 5 stages (Brief intake, Creative ideation, Storyboard drafts, Revisions, Final approval). Verify AI Briefing Engine timeline shows 2-5 minutes with 1 stage. Both timelines display as horizontal progress bars with time markers.</description>
      </test>
      <test ac="AC2">
        <id>horizontal-progress-bars</id>
        <description>Timeline visuals use horizontal progress bars (not vertical). Time markers clearly labeled (2-4 weeks vs 2-5 minutes). Visual contrast emphasizes speed difference.</description>
      </test>
      <test ac="AC3">
        <id>value-card-content</id>
        <description>4 TransformationValueCard components render with correct content: Speed to Market (indigo, Zap icon, "Minutes not weeks"), Brand Consistency (cyan, Shield icon, "Every ad aligns with brand"), Creative Freedom (fuchsia, Palette icon, "8 styles to match any vision"), Seamless Handoff (orange, Handshake icon, "Studios production ready").</description>
      </test>
      <test ac="AC4">
        <id>responsive-grid-layout</id>
        <description>Desktop (1024px+): Value cards display in 2×2 grid. Mobile (&lt;768px): Value cards stack in 1 column. Tablet (768-1024px): Test both layouts to confirm breakpoint transition.</description>
      </test>
      <test ac="AC5">
        <id>gsap-reveal-animations</id>
        <description>Timeline bars draw in from left-to-right on scroll into view (scaleX animation). Value cards stagger fade-in (opacity 0→1, y: 30→0, stagger: 0.15s). Animations trigger at "top 80%" ScrollTrigger start point.</description>
      </test>
      <test ac="AC6">
        <id>lucide-icons</id>
        <description>Zap, Shield, Palette, Handshake icons from lucide-react render correctly in each value card. Icons sized appropriately (w-8 h-8 or similar) and colored with accent color.</description>
      </test>
      <test ac="AC7">
        <id>react-cleanup</id>
        <description>Open React DevTools, navigate to WorkflowTransformation component, scroll to trigger animations, then navigate away. Verify no console errors about ScrollTriggers firing after unmount. Check for memory leaks (component unmount should call ctx.revert()).</description>
      </test>
      <test ac="IV1">
        <id>mobile-overflow-check</id>
        <description>Set viewport to 375px width (iPhone SE). Verify timeline visuals do not overflow horizontally. Text labels remain readable. No horizontal scrollbar appears.</description>
      </test>
      <test ac="IV2">
        <id>grid-spacing-consistency</id>
        <description>Compare value card grid spacing (gap-6 or gap-8) with existing BenefitCard grid in AudienceBenefits component. Spacing should match for visual consistency.</description>
      </test>
      <test ac="IV3">
        <id>messaging-alignment</id>
        <description>Compare speed comparison messaging with SPEC.md value props. Ensure "2-4 weeks" vs "2-5 minutes" language matches PRD. Verify value card descriptions align with product positioning.</description>
      </test>
    </ideas>
  </tests>
</story-context>
