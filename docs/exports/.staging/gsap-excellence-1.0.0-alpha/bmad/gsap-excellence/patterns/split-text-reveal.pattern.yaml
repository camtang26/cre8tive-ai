# Pattern: Split Text Reveal
# Category: Text Animations
# GSAP Excellence Engine Pattern Library

id: pattern-split-text-reveal-006
name: "Split Text Character Reveal"
category: "text-animations"
complexity: "medium-high"
gsap_version: "3.12.0"
plugins_required: ["SplitText"]
description: "Split text into characters/words and reveal with stagger - premium text effect"
inspiration_source: "Apple event titles, Awwwards typography"
performance_notes: "60fps with SplitText plugin, GPU acceleration on characters"
created_date: "2025-10-11"
last_validated: "2025-10-11"
success_count: 0
tags: ["text", "reveal", "split", "stagger", "premium", "typography"]
framework: "vanilla"

code_example: |
  import { gsap } from 'gsap';
  import { SplitText } from 'gsap/SplitText';

  gsap.registerPlugin(SplitText);

  const title = document.querySelector('[data-split-text]');

  // Split text into characters
  const split = new SplitText(title, {
    type: "chars,words,lines",
    charsClass: "char",
    wordsClass: "word",
    linesClass: "line"
  });

  // Animate characters with stagger
  gsap.from(split.chars, {
    opacity: 0,
    y: 50,
    rotationX: -90,
    transformOrigin: "50% 50%",
    duration: 0.6,
    ease: "back.out(1.2)",
    stagger: 0.02, // 0.02s between each character
    onComplete: () => {
      // Revert split for accessibility and performance
      split.revert();
    }
  });

usage_notes: |
  HTML:
  <h1 data-split-text>Your Premium Title</h1>

  SplitText Plugin (Premium):
  - Requires GreenSock Club membership
  - Splits text into chars, words, or lines
  - Wraps each unit in <div> elements

  IMPORTANT: Always revert() SplitText after animation completes
  to remove wrapper divs and restore original structure

variations:
  word_reveal: "Use split.words instead of split.chars"
  line_reveal: "Use split.lines for line-by-line reveal"
  wave_effect: "Stagger with from: 'start' for wave pattern"
  elastic_in: "Use ease: 'elastic.out(1, 0.5)' for bouncy effect"
  3d_flip: "Use rotationY instead of rotationX for horizontal flip"

advanced_example: |
  // Multiple split types with different animations
  const split = new SplitText(title, { type: "lines,words,chars" });

  const tl = gsap.timeline();

  // Animate lines first
  tl.from(split.lines, {
    opacity: 0,
    y: 20,
    stagger: 0.1
  });

  // Then animate characters within
  tl.from(split.chars, {
    opacity: 0,
    scale: 0,
    stagger: 0.02
  }, "-=0.5");

performance_tips:
  - Limit to short text (headings, not paragraphs)
  - Always revert() SplitText after animation
  - Use will-change: transform on chars
  - Avoid on mobile for very long text
  - Consider splitting only lines on mobile

accessibility:
  reduced_motion: "Skip split, show text immediately"
  implementation: |
    if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
      return; // Don't split or animate
    }

  screen_readers: |
    // SplitText preserves text content for screen readers
    // No additional ARIA needed
    // revert() restores original DOM structure

browser_support:
  chrome: "Full support"
  firefox: "Full support"
  safari: "Full support"
  mobile: "Good support, test performance with long text"

cleanup: |
  // Always revert SplitText
  split.revert();
  // Or use GSAP context
  const ctx = gsap.context(() => {
    const split = new SplitText(title, { type: "chars" });
    gsap.from(split.chars, { ... });
  });
  // ctx.revert() automatically reverts SplitText
